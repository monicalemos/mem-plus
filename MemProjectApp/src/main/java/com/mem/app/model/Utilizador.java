package com.mem.app.model;
// Generated 21/Ago/2015 19:35:12 by Hibernate Tools 4.3.1

import java.util.ArrayList;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Utilizador generated by hbm2java
 */
@Entity
@Table(name = "utilizador", catalog = "memdb")
public class Utilizador implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private int idUtilizador;
	private String nomeUtilizador;
	private String password;
	private String tipoUtilizador;
	private String email;
	private List<Tecnico> tecnicos = new ArrayList<Tecnico>(0);
	private List<Familiar> familiars = new ArrayList<Familiar>(0);

	public Utilizador() {
	}

	public Utilizador(int idUtilizador, String nomeUtilizador, String password, String tipoUtilizador) {
		this.idUtilizador = idUtilizador;
		this.nomeUtilizador = nomeUtilizador;
		this.password = password;
		this.tipoUtilizador = tipoUtilizador;
	}

	public Utilizador(int idUtilizador, String nomeUtilizador, String password, String tipoUtilizador, String email,
			List<Tecnico> tecnicos, List<Familiar> familiars) {
		this.idUtilizador = idUtilizador;
		this.nomeUtilizador = nomeUtilizador;
		this.password = password;
		this.tipoUtilizador = tipoUtilizador;
		this.email = email;
		this.tecnicos = tecnicos;
		this.familiars = familiars;
	}

	@Id
	@GeneratedValue
	@Column(name = "idUtilizador", unique = true, nullable = false)
	public int getIdUtilizador() {
		return this.idUtilizador;
	}

	public void setIdUtilizador(int idUtilizador) {
		this.idUtilizador = idUtilizador;
	}

	@Column(name = "nomeUtilizador", nullable = false, length = 45)
	public String getNomeUtilizador() {
		return this.nomeUtilizador;
	}

	public void setNomeUtilizador(String nomeUtilizador) {
		this.nomeUtilizador = nomeUtilizador;
	}

	@Column(name = "password", nullable = false, length = 45)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "tipoUtilizador", nullable = false, length = 45)
	public String getTipoUtilizador() {
		return this.tipoUtilizador;
	}

	public void setTipoUtilizador(String tipoUtilizador) {
		this.tipoUtilizador = tipoUtilizador;
	}

	@Column(name = "email", length = 45)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "utilizador")
	public List<Tecnico> getTecnicos() {
		return this.tecnicos;
	}

	public void setTecnicos(List<Tecnico> tecnicos) {
		this.tecnicos = tecnicos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "utilizador")
	public List<Familiar> getFamiliars() {
		return this.familiars;
	}

	public void setFamiliars(List<Familiar> familiars) {
		this.familiars = familiars;
	}

}
